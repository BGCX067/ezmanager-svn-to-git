/*  <EzManager: Web application for activities follow up. As main features, you can create projects, then associate tasks and calculate their corresponding invoices. Each project is associated to one or more customers identified by their addressee>
    Copyright (C) <2010>  <Michel Petrovic> <email: dotnetmobile@gmail.com>

    Contributor(s): _____________________.

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

package org.dotnetmobile.ezmanager.entity;

// Generated Jan 3, 2010 6:01:01 PM by Hibernate Tools 3.2.5.Beta

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.validator.NotNull;
import org.jboss.seam.annotations.Logger;
import org.jboss.seam.log.Log;


/**
 * ExecutedTask generated by hbm2java
 */
@Entity
@Table(name = "EXECUTED_TASK", schema = "EZMANAGER")
public class ExecutedTask implements java.io.Serializable {

	@Logger private Log log;
	
	/**
	 * 
	 */
	private static final long serialVersionUID = -6163490982701032757L;
	
	private long executedTaskId;
	private Task task;
	private UserIdentity userIdentity;
	private BigDecimal totalHours;
	private BigDecimal amount;
	private Date startDate;
	private Date endDate;
	private Set<Invoice> invoices = new HashSet<Invoice>(0);

	public ExecutedTask() {
	}

	public ExecutedTask(long executedTaskId, Task task,
			UserIdentity userIdentity, BigDecimal totalHours, Date startDate, Date endDate) {
		this.executedTaskId = executedTaskId;
		this.task = task;
		this.userIdentity = userIdentity;
		this.totalHours = totalHours;
		this.startDate = startDate;
		this.endDate = endDate;
	}

	public ExecutedTask(long executedTaskId, Task task,
			UserIdentity userIdentity, BigDecimal totalHours,
			Date executionDate, BigDecimal amount, Date startDate,
			Date endDate, Set<Invoice> invoices) {
		this.executedTaskId = executedTaskId;
		this.task = task;
		this.userIdentity = userIdentity;
		this.totalHours = totalHours;
		this.amount = amount;
		this.startDate = startDate;
		this.endDate = endDate;
		this.invoices = invoices;
	}

	@Id
	@GeneratedValue(generator = "seqExecutedTask")
	@SequenceGenerator(name="seqExecutedTask", sequenceName = "SEQ_EXECUTED_TASK")
	@Column(name = "EXECUTED_TASK_ID", unique = true, nullable = false, precision = 10, scale = 0)
	public long getExecutedTaskId() {
		return this.executedTaskId;
	}

	public void setExecutedTaskId(long executedTaskId) {
		this.executedTaskId = executedTaskId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TASK_ID", nullable = false)
	@NotNull
	public Task getTask() {
		return this.task;
	}

	public void setTask(Task task) {
		this.task = task;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EXECUTED_BY_USER_ID", nullable = false)
	@NotNull
	public UserIdentity getUserIdentity() {
		return this.userIdentity;
	}

	public void setUserIdentity(UserIdentity userIdentity) {
		this.userIdentity = userIdentity;
	}

	@Column(name = "TOTAL_HOURS", nullable = false, precision = 8)
	@NotNull
	public BigDecimal getTotalHours() {
		return this.totalHours;
	}

	public void setTotalHours(BigDecimal totalHours) {
		this.totalHours = totalHours;
	}

	@Column(name = "AMOUNT", precision = 11)
	public BigDecimal getAmount() {
		return this.amount;
	}

	public void setAmount(BigDecimal amount) {
		this.amount = amount;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "START_DATE", length = 7)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "END_DATE", length = 7)
	public Date getEndDate() {
		return this.endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "executedTask")
	public Set<Invoice> getInvoices() {
		return this.invoices;
	}

	public void setInvoices(Set<Invoice> invoices) {
		this.invoices = invoices;
	}

}
