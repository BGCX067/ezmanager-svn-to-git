/*  <EzManager: Web application for activities follow up. As main features, you can create projects, then associate tasks and calculate their corresponding invoices. Each project is associated to one or more customers identified by their addressee>
    Copyright (C) <2010>  <Michel Petrovic> <email: dotnetmobile@gmail.com>

    Contributor(s): _____________________.

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

package org.dotnetmobile.ezmanager.entity;

// Generated Jan 3, 2010 6:01:01 PM by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;
import org.jboss.seam.annotations.Logger;
import org.jboss.seam.log.Log;



/**
 * Project generated by hbm2java
 */
@Entity
@Table(name = "PROJECT", schema = "EZMANAGER")
public class Project implements java.io.Serializable {

	@Logger private Log log;
	
	/**
	 * 
	 */
	private static final long serialVersionUID = -2167167413217476782L;
	
	private long projectId;
	private BaseStatus baseStatus;
	private String name;
	private Date startDate;
	private Date endDate;
	private Set<Customer> customers = new HashSet<Customer>(0);
	private Set<Task> tasks = new HashSet<Task>(0);

	public Project() {
	}

	public Project(long projectId, BaseStatus baseStatus, String name) {
		this.projectId = projectId;
		this.baseStatus = baseStatus;
		this.name = name;
	}

	public Project(long projectId, BaseStatus baseStatus, String name, 
			Date startDate, Date endDate, Set<Customer> customers,
			Set<Task> tasks) {
		this.projectId = projectId;
		this.baseStatus = baseStatus;
		this.name = name;
		this.startDate = startDate;
		this.endDate = endDate;
		this.customers = customers;
		this.tasks = tasks;
	}

	@Id
	@GeneratedValue(generator = "seqProject")
	@SequenceGenerator(name="seqProject", sequenceName = "SEQ_PROJECT")
	@Column(name = "PROJECT_ID", unique = true, nullable = false, precision = 10, scale = 0)
	public long getProjectId() {
		return this.projectId;
	}

	public void setProjectId(long projectId) {
		this.projectId = projectId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "STATUS_ID", nullable = false)
	@NotNull
	public BaseStatus getBaseStatus() {
		return this.baseStatus;
	}

	public void setBaseStatus(BaseStatus baseStatus) {
		this.baseStatus = baseStatus;
	}

	@Column(name = "NAME", nullable = false, length = 100)
	@NotNull
	@Length(max = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "START_DATE", length = 7)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "END_DATE", length = 7)
	public Date getEndDate() {
		return this.endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "projects")
	public Set<Customer> getCustomers() {
		return this.customers;
	}

	public void setCustomers(Set<Customer> customers) {
		this.customers = customers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<Task> getTasks() {
		return this.tasks;
	}

	public void setTasks(Set<Task> tasks) {
		this.tasks = tasks;
	}

}
